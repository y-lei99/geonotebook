FROM jupyter/base-notebook:lab-1.2.5

USER root

RUN apt-get update && \
    apt-get -y install gcc python3-dev python3-pip libxml2-dev libxslt1-dev zlib1g-dev g++ && \
    apt-get install -y --no-install-recommends ffmpeg && \
    rm -rf /var/lib/apt/lists/*
USER $NB_UID



RUN conda install -c conda-forge gdal
RUN conda install --quiet --yes \
                       'curl' \
                       'pyproj' \
                       'pkg-config' \
                       'ipywidgets' \
                       'setuptools' \
                       'wheel' \
                       'pip' \
                       'cffi' \
                       'lxml' \
                       'numpy' \
                       'scipy' \
                       'pandas' \
                       'matplotlib' \
                       'seaborn' \
                       'cython' \
                       'statsmodels' \
                       'pyOpenSSL' \
                       'scikit-image' \
                       #'jupyterhub=1.1.0' \
                       && \
                       conda clean --all -f -y && \
                       jupyter nbextension enable --py widgetsnbextension --sys-prefix && \
                       jupyter labextension install @jupyter-widgets/jupyterlab-manager@^1.0.1 --no-build && \
                       jupyter labextension install jupyterlab_bokeh@1.0.0 --no-build && \
                       jupyter lab build && \
                       npm cache clean --force && \
                       rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
                       rm -rf /home/$NB_USER/.cache/yarn && \
                       rm -rf /home/$NB_USER/.node-gyp && \
                       fix-permissions $CONDA_DIR && \
                       fix-permissions /home/$NB_USER
# Generates pip2.7
RUN pip install -U pip tox

USER root
# Generate default config and disable authentication
RUN jupyter-notebook --generate-config --allow-root -y
RUN sed -i "s/#c.NotebookApp.token = '<generated>'/c.NotebookApp.token = ''/" /home/jovyan/.jupyter/jupyter_notebook_config.py

RUN pip install https://github.com/OpenGeoscience/KTile/archive/master.zip


ADD .  /$CONDA_DIR/geonotebook
#ADD ./devops/docker/jupyter.sh /jupyter.sh
ADD ./devops/docker/jupyter.sh /jupyter.sh
ADD ./devops/docker/start.sh /start.sh
ADD ./devops/docker/start-notebook.sh /start-notebook.sh
ADD ./devops/docker/start-singleuser.sh /start-singleuser.sh
COPY ./devops/docker/start.sh ./devops/docker/start-notebook.sh ./devops/docker/start-singleuser.sh /usr/local/bin/
COPY ./devops/docker/start.sh ./devops/docker/start-notebook.sh ./devops/docker/start-singleuser.sh /$CONDA_DIR/geonotebook/

WORKDIR /$CONDA_DIR/geonotebook
#RUN conda install -c conda-forge gdal
RUN pip install -U -r prerequirements.txt . && \
    pip install -U -r requirements.txt && \
    conda install -c conda-forge gdal && \
    #jupyter labextension install geonotebook && \
    jupyter serverextension enable --py geonotebook --sys-prefix && \
    jupyter nbextension enable --py geonotebook --sys-prefix 
    #jupyter labextension install geonotebook --sys-prefix && \
    #jupyter labextension enable geonotebook 
RUN fix-permissions /$CONDA_DIR/geonotebook
RUN fix-permissions /usr/local/bin/
RUN fix-permissions /start.sh
RUN fix-permissions /start-notebook.sh
RUN fix-permissions /start-singleuser.sh
RUN fix-permissions /jupyter.sh

#VOLUME /notebooks
#WORKDIR /notebooks

USER $NB_UID
#USER root
#ENTRYPOINT ["tini","-g","--"]
#CMD ["jupyter.sh"]
#ENTRYPOINT ["/jupyter.sh"]
#CMD ["jupyterhub", "--no-ssl", "--Spawner.notebook_dir=/$CONDA_DIR/geonotebook]
